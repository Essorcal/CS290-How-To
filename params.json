{"name":"Google Maps API How to Guide","tagline":"","body":"### Introduction\r\n\r\nGoogle offers many different API's for their different search, web and data analytic services.  For this how to guide we will be focusing on the Google maps API and adding map functionality to your website. To begin, Google's documentation can be found at the following link: [Google documentation](https://developers.google.com/maps/documentation/javascript/).  One of the nice things about Google's Maps v3 API is there is no need for an API key if you stay under 1,000 requests per day. That being said creating an API key is free and allows you to monitor and track the API usage. Once you go over a certain number of requests per day then you will be charged based on API usage.  The pricing structure can be found [here](https://developers.google.com/maps/pricing-and-plans/).\r\n\r\n### Getting an API key\r\n\r\nEven though for the amount of requests used to create this how to guide an API key was not required the steps to get one are laid out below for completeness and in case necessary. On the main Google documentation page [https://developers.google.com/maps/documentation/javascript/](https://developers.google.com/maps/documentation/javascript/)\r\nChoose the following **Get a Key** option at the top\r\n\r\n<img src=\"\\images\\GetaKey.png\">\r\n\r\nOn the next screen **Activate the Google Maps Javascript API** choose **Continue**.\r\n\r\n<img src=\"\\images\\ActivateKey.png\">\r\n\r\nNext create a new project and choose **continue**.\r\n\r\n<img src=\"\\images\\CreateProject.png\">\r\n\r\nOn the credentials page choose create credentials and create a new API key.\r\n\r\n![](https://github.com/Essorcal/CS290-How-To/blob/gh-pages/images/APIKey.png)\r\n\r\nNext choose **browser key**\r\n\r\n<img src=\"\\images\\BrowserKey.png\">\r\n\r\nFinally name the browser key and input any HTTP referrers to limit API requests to only your sites so no one can use your API requests.\r\n\r\n<img src=\"\\images\\CreateKey.png\">\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}